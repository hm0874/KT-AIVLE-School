def dfs(x, y):
    # 현재 위치를 방문 처리
    if x < 0 or x >= n or y < 0 or y >= m or dalgona[x][y] == '1':
        return False
    # 현재 위치가 구멍이라면, 즉 0이라면
    if dalgona[x][y] == '0':
        # 해당 위치를 방문 처리
        dalgona[x][y] = '1'
        # 상, 하, 좌, 우의 위치들도 모두 재귀적으로 호출
        dfs(x - 1, y)
        dfs(x, y - 1)
        dfs(x + 1, y)
        dfs(x, y + 1)
        return True
    return False

# 입력 받기
n, m = map(int, input().split())
dalgona = [list(input().strip()) for _ in range(n)]

# 모든 위치에 대하여 달고나 개수 세기
result = 0
for i in range(n):
    for j in range(m):
        # 현재 위치에서 DFS 수행 결과가 True라면, 즉 구멍이 연결되어 달고나가 만들어진다면
        if dfs(i, j) == True:
            result += 1

print(result)
