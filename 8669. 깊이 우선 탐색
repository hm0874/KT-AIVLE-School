def DFS(인접리스트, 방문여부, 현재):
    방문여부[현재] = True  # 현재 정점을 방문했다고 표시
    print(현재, end=" ")  # 현재 정점을 출력
    
    # 오름차순으로 인접한 정점들을 탐색
    for 이웃 in sorted(인접리스트[현재]):
        if not 방문여부[이웃]:
            DFS(인접리스트, 방문여부, 이웃)  # 방문하지 않은 이웃에 대해 재귀 호출

# 입력값 처리
N, M = map(int, input().split())  # 정점의 개수 N, 간선의 개수 M 입력
인접리스트 = [[] for _ in range(N + 1)]  # 인접리스트 초기화
방문여부 = [False] * (N + 1)  # 방문여부 배열 초기화

# 간선 정보 입력
for _ in range(M):
    A, B = map(int, input().split())
    인접리스트[A].append(B)  # A와 B가 연결되었음을 인접리스트에 표시
    인접리스트[B].append(A)  # 무방향 그래프이므로 반대쪽도 표시

# 깊이 우선 탐색 수행
DFS(인접리스트, 방문여부, 1)  # 정점 1에서부터 탐색 시작
