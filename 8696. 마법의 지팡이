from collections import deque

def min_stick_count(n):
    # 이미 방문한 수를 저장하기 위한 집합
    visited = set()
    
    # BFS를 위한 큐 초기화
    queue = deque([(n, 0)])  # (현재 수, 지팡이 사용 횟수)
    
    while queue:
        current, count = queue.popleft()
        
        # 현재 수가 1이면 최소 지팡이 사용 횟수 반환
        if current == 1:
            return count
        
        # 이미 방문한 수는 스킵
        if current in visited:
            continue
        
        # 다음 수 계산하여 큐에 추가
        visited.add(current)
        
        # 2로 나누어 떨어지는 경우
        if current % 2 == 0:
            queue.append((current // 2, count + 1))
        
        # 3으로 나누고 2로 나누어 떨어지지 않는 경우
        if current % 3 == 0 and current // 3 % 2 != 0:
            queue.append((current // 3, count + 2))
        
        # 5로 나누고 2로 나누어 떨어지지 않는 경우
        if current % 5 == 0 and current // 5 % 2 != 0:
            queue.append((current // 5, count + 3))
    
    # 1을 만들 수 없는 경우 -1 반환
    return -1

# 입력 받기
n = int(input())

# 결과 출력
print(min_stick_count(n))
